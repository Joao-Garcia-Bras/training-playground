pipeline {
    agent { 
		docker { 
			image 'maven:3.3.3' 
			args '--network training-playground'
			}
	}
    stages {
        stage('build') {
                 steps {
                   configFileProvider([configfile(fileId: 'settings.xml', targetLocation: 'settings-copy.xml')]) {
 	                	sh "mvn clean install \
		               	-f '05 - Recording Test Results and Artifacts/04 - Jenkinsfile - Publish in Nexus' \
		            	-s settings-copy.xml"
 		              }
             }
        }
	    
/*	stage('publish') {
		sh "mvn deploy:deploy-file \
			-s settings-copy.xml\
			-Durl='http://nexus:8081/repository/maven-releases/' \
			-DrepositoryId=maven-releases\
			-Dfile=your-artifact-1.0.jar \


		
			-Durl=file://C:\m2-repo \
                       -DrepositoryId=some.id \
                       -Dfile=your-artifact-1.0.jar \
                       [-DpomFile=your-pom.xml] \
                       [-DgroupId=org.some.group] \
                       [-DartifactId=your-artifact] \
                       [-Dversion=1.0] \
                       [-Dpackaging=jar] \
                       [-Dclassifier=test] \
                       [-DgeneratePom=true] \
                       [-DgeneratePom.description="My Project Description"] \
                       [-DrepositoryLayout=legacy]"
        }*/
    }
}
